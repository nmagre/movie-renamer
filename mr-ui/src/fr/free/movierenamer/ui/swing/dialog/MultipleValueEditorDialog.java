/*
 * Movie Renamer
 * Copyright (C) 2013-2014 Nicolas Magré
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package fr.free.movierenamer.ui.swing.dialog;

import com.alee.laf.optionpane.WebOptionPane;
import fr.free.movierenamer.info.MediaInfo.InfoProperty;
import fr.free.movierenamer.ui.MovieRenamer;
import fr.free.movierenamer.ui.event.UIEvent;
import fr.free.movierenamer.ui.swing.panel.info.InfoEditorPanel;
import fr.free.movierenamer.ui.utils.ImageUtils;
import fr.free.movierenamer.ui.utils.UIUtils;
import java.util.List;
import static fr.free.movierenamer.ui.utils.UIUtils.i18n;
import fr.free.movierenamer.utils.StringUtils;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 * MultipleValueEditorDialog
 *
 * @author Nicolas Magré
 */
public class MultipleValueEditorDialog extends AbstractDialog {

    private static final long serialVersionUID = 1L;
// TODO check and finish editor

    private final DefaultListModel<String> listModel = new DefaultListModel<>();
    private int index = -1;
    private final InfoProperty property;
    private final List<Object> objectList;

    /**
     * Creates new form MultipleValueEditorDialog
     *
     * @param mr
     * @param objectList
     * @param property
     */
    @SuppressWarnings("unchecked")
    public MultipleValueEditorDialog(MovieRenamer mr, List<Object> objectList, InfoProperty property) {
        super(mr, i18n.getLanguageKey("dialog.editor", false));
        this.property = property;
        this.objectList = objectList;
        initComponents();

        list.setModel(listModel);
        list.addListSelectionListener(createListListener());

        for (Object obj : objectList) {
            listModel.addElement(obj.toString());
        }

        if (!listModel.isEmpty()) {
            list.setSelectedIndex(0);
            index = 0;
        }

    }

    private ListSelectionListener createListListener() {
        return new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                if (!lse.getValueIsAdjusting()) {
                    removeBtn.setEnabled(true);
                    index = list.getSelectedIndex();
                } else {
                    index = -1;
                }
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    cancelBtn = UIUtils.createButton(i18n.getLanguageKey("cancel", false), ImageUtils.CANCEL_16);
    applyBtn = UIUtils.createButton(i18n.getLanguageKey("apply", false), ImageUtils.OK_16);
    jScrollPane1 = new javax.swing.JScrollPane();
    list = new com.alee.laf.list.WebList();
    removeBtn = UIUtils.createButton(i18n.getLanguageKey("remove", false), ImageUtils.MINUS_16);
    addBtn = UIUtils.createButton(i18n.getLanguageKey("add", false), ImageUtils.PLUS_16);

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    cancelBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelBtnActionPerformed(evt);
      }
    });

    applyBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        applyBtnActionPerformed(evt);
      }
    });

    list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    list.setEditable(true);
    jScrollPane1.setViewportView(list);

    removeBtn.setEnabled(false);
    removeBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        removeBtnActionPerformed(evt);
      }
    });

    addBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(applyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(cancelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(applyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
      if (index != -1 && !listModel.isEmpty()) {
          listModel.remove(index);
          if (listModel.isEmpty()) {
              index = -1;
              removeBtn.setEnabled(false);
          }
      }
  }//GEN-LAST:event_removeBtnActionPerformed

  private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
      String s = (String) WebOptionPane.showInputDialog(this, "test", "test", JOptionPane.INFORMATION_MESSAGE, null, null, null);

      if (s != null && s.length() > 0) {
          listModel.addElement(s);
          removeBtn.setEnabled(true);
      }
  }//GEN-LAST:event_addBtnActionPerformed

  private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
      dispose();
  }//GEN-LAST:event_cancelBtnActionPerformed

  private void applyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyBtnActionPerformed
      List<Object> values = new ArrayList<>();
      ListModel model = list.getModel();
      int size = model.getSize();
      for (int i = 0; i < size; i++) {
          values.add(model.getElementAt(i));
      }

      UIEvent.fireUIEvent(UIEvent.Event.EDITED, InfoEditorPanel.class, null, objectList, values);
      dispose();
  }//GEN-LAST:event_applyBtnActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private com.alee.laf.button.WebButton addBtn;
  private com.alee.laf.button.WebButton applyBtn;
  private com.alee.laf.button.WebButton cancelBtn;
  private javax.swing.JScrollPane jScrollPane1;
  private com.alee.laf.list.WebList list;
  private com.alee.laf.button.WebButton removeBtn;
  // End of variables declaration//GEN-END:variables
}
