/*
 * Movie Renamer
 * Copyright (C) 2014 Nicolas Magré
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package fr.free.movierenamer.ui.swing.panel.info.movie;

import com.alee.laf.panel.WebPanel;
import com.alee.laf.text.WebTextField;
import fr.free.movierenamer.info.IdInfo;
import fr.free.movierenamer.ui.MovieRenamer;
import fr.free.movierenamer.ui.bean.UIEditor;
import fr.free.movierenamer.ui.swing.panel.info.InfoEditorPanel;
import fr.free.movierenamer.ui.utils.ImageUtils;
import fr.free.movierenamer.utils.ScrapperUtils.AvailableApiIds;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.Icon;

/**
 *
 * @author Nicolas Magré
 */
public class MovieIdPanel extends InfoEditorPanel<List<IdInfo>> {

  private static final List<AvailableApiIds> apiIds = new ArrayList<>(Arrays.asList(new AvailableApiIds[]{AvailableApiIds.IMDB, AvailableApiIds.TMDB, AvailableApiIds.ALLOCINE, AvailableApiIds.ROTTEN, AvailableApiIds.KINOPOISK}));

  public MovieIdPanel(MovieRenamer mr) {
    super(mr);
    initComponents();

    int maxGridWith = 3;// 3 -> Label + field + edit/cancel button
    UIEditor editor;
    for (AvailableApiIds apiId : apiIds) {
      editor = new UIEditor(mr, new WebTextField());
      createEditableField(apiId.name(), editor, maxGridWith);
      map.put(apiId, editor);
    }

    // Add dummy Panel to avoid centering
    add(new WebPanel(), getDummyPanelConstraint());
  }

  @Override
  public Icon getIcon() {
    return ImageUtils.ID_16;
  }

  @Override
  public String getPanelName() {
    return "id";
  }

  @Override
  public PanelType getType() {
    return PanelType.ID_INFO;
  }

  @Override
  public void setInfo(List<IdInfo> idInfos) {
    UIEditor editor;
    for (IdInfo idinfo : idInfos) {
      editor = map.get(idinfo.getIdType());
      if (editor != null) {
        editor.setValue(idinfo.toString());
      }
    }
  }

  @Override
  public List<IdInfo> getInfo() {
    return null;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    setLayout(new java.awt.GridBagLayout());
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
}
